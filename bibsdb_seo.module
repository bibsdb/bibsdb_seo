<?php
/**
 * @file
 * Code for the Bibsdb SEO feature.
 */

include_once 'bibsdb_seo.features.inc';

/**
 * Implements hook_ctools_render_alter. 
 * Fill in breadcrumbs on all pages above content.
 * Strange hook I don't quite understand, but it works.
 * hook_page_alter can't be used because og panels_everywhere
 */
function bibsdb_seo_ctools_render_alter(&$info, &$page, &$context) {
	// The hook is called twice for each page. This seems to pick the right invocation.
	if(!($info['no_blocks'])) {

    // Invoke the path_breadcrumbs building system
    // The Path breadcrumbs module does it in hook_page_alter and it has no effect
		path_breadcrumbs_set_breadcrumb();

    // the rendered breadcrumbs
		$vars = array();
		$vars['breadcrumb'] = drupal_get_breadcrumb();
		$breadcrumb = theme('breadcrumb', $vars);


		$content = (is_array($info['content'])) ? drupal_render($info['content']) : $info['content'];

		$info['content'] = "<div class=\"breadcrumb-wrapper\">" . $breadcrumb . "</div>" . $content;
	}
}



/**
 * Implements hook_node_presave. 
 * Changes xmlsitemap settings for pages with tag inspirationsliste
 * 
 * @param $node
 */
function bibsdb_seo_node_presave($node) {

  // Pages of with taxonomy term "Inspirationsliste" must be excluded from the xmlsitemap
	if ('ding_page' == $node->type) {
		$tid = 61;
		$wrapper = entity_metadata_wrapper('node', $node);

    // Set the defaults
		$node->xmlsitemap['status'] = 1;
		$node->xmlsitemap['status_override'] = 0;

    // Change if inspirationsliste
		foreach ($wrapper->field_ding_page_tags->getIterator() as $delta => $term_wrapper) {
			if ( $term_wrapper->getIdentifier() == $tid) {
				$node->xmlsitemap['status'] = 0;
				$node->xmlsitemap['status_override'] = 1;
			}
		} 
	}
}


/**
 * Implements hook_pathauto_alias_alter().
 * Change the pathauto alias for pages with tag "inspirationsliste"
 */

function bibsdb_seo_pathauto_alias_alter(&$alias, array &$context) {

	$tid = 61;

  // Limit to node entity type
	if ($context['module'] == 'node') {
		$node = $context['data']['node'];
		$wrapper = entity_metadata_wrapper('node', $node);

    // Limit to ding_pages that is tagged with "inspirationsliste"
		if ($node->type == 'ding_page') {
			foreach ($wrapper->field_ding_page_tags->getIterator() as $delta => $term_wrapper) {
				if ( $term_wrapper->getIdentifier() == $tid) {
					$alias = str_replace('indhold/', 'dbcliste/', $alias);
				}
			}
		}
	}
}


/**
 * Implements hook_views_post_execute().
 *
 * If there is a pager display output rel links
 * @see https://support.google.com/webmasters/answer/1663744?hl=en
 */
function bibsdb_seo_views_post_execute(&$view) {
  // @todo - only works if we can expect one pager per page.
	if ($view->display[$view->current_display]->handler->use_pager()) {
		$current_page = $view->query->pager->current_page;
		$items_per_page = $view->query->pager->options['items_per_page'];
		$last_item_viewed = ($current_page * $items_per_page) + $items_per_page;
		$total_items = $view->query->pager->total_items;
		bibsdb_seo_set_rel_links(current_path(), $current_page, $last_item_viewed, $total_items);
	}
}

/**
 * Set the rel links in html head. 
 * Unfortunatly drupal_add_html_head_link generates an illegal arraykey in the render array. The links aren't output.
 * I fix this in bibsdb_seo_html_head_alter where I change the name of the key.
 *
 * @param string $current_path
 *   Path of current page.
 * @param int $current_page
 *   The current page number starts with 0.
 * @param int $last_item_viewed
 *   The number of the last item on display on this page.
 * @param int $total_items
 *   The total number of items in the results.
 */
function bibsdb_seo_set_rel_links($current_path, $current_page, $last_item_viewed, $total_items) {
	$head_links = bibsdb_seo_prep_rel_links($current_path, $current_page, $last_item_viewed, $total_items);
	foreach ($head_links as $head_link) {
		drupal_add_html_head_link($head_link);
	}
}

/**
 * Prepare the rel links for html head.
 *
 * @see bibsdb_seo_set_rel_links()
 *
 * @param string $current_path
 *   Path of current page.
 * @param int $current_page
 *   The current page number starts with 0.
 * @param int $last_item_viewed
 *   The number of the last item on display on this page.
 * @param int $total_items
 *   The total number of items in the results.
 *
 * @return array
 *   Array of rel links to add to html head.
 */
function bibsdb_seo_prep_rel_links($current_path, $current_page, $last_item_viewed, $total_items) {
  // Prepare link rel=prev if current page > 0.
	$head_links = array();
	if ($current_page > 0) {
		if ($current_page > 1) {
			$parameters = array(
				'page' => $current_page - 1,
				);
		}
		else {
			$parameters = array();
		}
		$query = drupal_get_query_parameters($parameters, array());
		if ($query_pager = pager_get_query_parameters()) {
			$query = array_merge($query, $query_pager);
		}
		$head_link = array(
			'rel' => 'prev',
			'href' => url(
				$current_path,
				array(
					'query' => $query,
					)
				),
			);

		$head_links[] = $head_link;
	}
  // Prepare link rel=next if more pages available.
	if ($total_items > $last_item_viewed) {
		$parameters = array(
			'page' => $current_page + 1,
			);
		$query = drupal_get_query_parameters($parameters, array());
		if ($query_pager = pager_get_query_parameters()) {
			$query = array_merge($query, $query_pager);
		}
		$head_link = array(
			'rel' => 'next',
			'href' => url(
				$current_path,
				array(
					'query' => $query,
					)
				),
			);
		$head_links[] = $head_link;
	}

	return $head_links;
}

/**
* Implements hook_html_head_alter()
* Fixes a bug in drupal_add_html_head_link. 
* Unfortunatly drupal_add_html_head_link generates an illegal arraykey in the render array. The links aren't output.
* I fix this in bibsdb_seo_html_head_alter by changing the name of the key.
*/

function bibsdb_seo_html_head_alter(&$head_elements) {

	foreach ($head_elements as $key => $value) {
		if (strpos($key, 'drupal_add_html_head_link:next:/arrangementer') === 0) {
			$head_elements['bibsdb_seo_rel_next'] = $value;
			unset($head_elements[$key]);
		}
	}	

	foreach ($head_elements as $key => $value) {
		if (strpos($key, 'drupal_add_html_head_link:prev:/arrangementer') === 0) {
			$head_elements['bibsdb_seo_rel_prev'] = $value;
			unset($head_elements[$key]);
		}
	}	

}